syntax = "proto3";
package tracker;

message InitRequest {
    required string email = 1;
    required string daemon_name = 2;
}

message InitResponse {
    enum Result {
        ACCEPTED = 0;
        REJECTED = 1;
    }
    required Result response = 1;
}

message ConfirmRequest {
    required string token = 1;
}

message ConfirmResponse {
    enum Result {
        ACCEPTED = 0;
        REJECTED = 1;
    }
    required Result response = 1;
    optional string token = 2;
}

message CreateRequest {
    enum Type {
        SERVER = 0;
        CLIENT = 1;
    }
    required string token = 1;
    optional string daemon_name = 2;
    required string path = 3;
    required Type type = 4;
    required bool encrypted = 5;
    optional string connect_address = 6;
    required string connect_port = 7;
    optional string listen_address = 8;
    required string listen_port = 9;
}

message CreateResponse {
    enum Result {
        ACCEPTED = 0;
        REJECTED = 1;
        INVALID_PATH = 2;
        PATH_EXISTS = 3;
    }
    required Result response = 1;
    optional string server_token = 2;
    optional string client_token = 3;
}

message DeleteRequest {
    required string token = 1;
    required string path = 2;
}

message DeleteResponse {
    enum Result {
        ACCEPTED = 0;
        REJECTED = 1;
        INVALID_PATH = 2;
        PATH_NOT_FOUND = 3;
    }
    required Result response = 1;
}

message ConnectRequest {
    required string token = 1;
    optional string daemon_name = 2;
    required string connect_token = 3;
}

message ConnectResponse {
    enum Result {
        ACCEPTED = 0;
        REJECTED = 1;
        ALREADY_CONNECTED = 2;
    }
    required Result response = 1;
}

message DisconnectRequest {
    required string token = 1;
    optional string daemon_name = 2;
    required string path = 3;
}

message DisconnectResponse {
    enum Result {
        ACCEPTED = 0;
        REJECTED = 1;
        INVALID_PATH = 2;
        PATH_NOT_FOUND = 3;
        NOT_CONNECTED = 4;
    }
    required Result response = 1;
}

message TreeRequest {
    required string token = 1;
    optional string daemon_name = 2;
    optional string path = 3;
}

message Tree {
    enum Type {
        SERVER = 0;
        CLIENT = 1;
        NOT_CONNECTED = 2;
    }
    repeated Tree tree = 1;
    required bool connection = 2;
    required Type type = 3;
    required string name = 4;
    required string path = 5;
    optional string server_token = 6;
    optional string client_token = 7;
}

message TreeResponse {
    enum Result {
        ACCEPTED = 0;
        REJECTED = 1;
        INVALID_PATH = 2;
        PATH_NOT_FOUND = 3;
    }
    required Result response = 1;
    optional Tree tree = 2;
}

message ClientMessage {
    enum Type {
        INIT_REQUEST = 0;
        CONFIRM_REQUEST = 1;
        CREATE_REQUEST = 2;
        DELETE_REQUEST = 3;
        CONNECT_REQUEST = 4;
        DISCONNECT_REQUEST = 5;
        TREE_REQUEST = 6;
        ALIVE = 99;
    }
    required Type type = 1;
    optional string message_id = 2;
    optional InitRequest init_request = 3;
    optional ConfirmRequest confirm_request = 4;
    optional CreateRequest create_request = 5;
    optional DeleteRequest delete_request = 6;
    optional ConnectRequest connect_request = 7;
    optional DisconnectRequest disconnect_request = 8;
    optional TreeRequest tree_request = 9;
}

message ServerMessage {
    enum Type {
        INIT_RESPONSE = 0;
        CONFIRM_RESPONSE = 1;
        CREATE_RESPONSE = 2;
        DELETE_RESPONSE = 3;
        CONNECT_RESPONSE = 4;
        DISCONNECT_RESPONSE = 5;
        TREE_RESPONSE = 6;
        ALIVE = 99;
    }
    required Type type = 1;
    optional string message_id = 2;
    optional InitResponse init_response = 3;
    optional ConfirmResponse confirm_response = 4;
    optional CreateResponse create_response = 5;
    optional DeleteResponse delete_response = 6;
    optional ConnectResponse connect_response = 7;
    optional DisconnectResponse disconnect_response = 8;
    optional TreeResponse tree_response = 9;
}