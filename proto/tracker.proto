syntax = "proto3";
package tracker;

message ServerConnection {
    string name = 1;
    string connect_address = 2;
    string connect_port = 3;
    bool encrypted = 4;
    bool fixed = 5;
    repeated string clients = 6;
}

message ClientConnection {
    string name = 1;
    string listen_address = 2;
    string listen_port = 3;
    bool encrypted = 4;
    bool fixed = 5;
    string server = 6;
}

message ConnectionsList {
    repeated ServerConnection server_connections = 1;
    repeated ClientConnection client_connections = 2;
}

message InitRequest {
    string email = 1;
}

message InitResponse {
    enum Result {
        ACCEPTED = 0;
        REJECTED = 1;
        EMAIL_EXISTS = 10;
    }
    Result response = 1;
}

message ConfirmRequest {
    string token = 1;
}

message ConfirmResponse {
    enum Result {
        ACCEPTED = 0;
        REJECTED = 1;
    }
    Result response = 1;
    string token = 2;
}

message CreateDaemonRequest {
    string token = 1;
    string daemon_name = 2;
    bool randomize = 3;
}

message CreateDaemonResponse {
    enum Result {
        ACCEPTED = 0;
        REJECTED = 1;
        INVALID_NAME = 10;
        NAME_EXISTS = 11;
    }
    Result response = 1;
    string daemon_name = 2;
    string token = 3;
}

message RegisterDaemonRequest {
    string token = 1;
    string identity = 2;
    string key = 3;
}

message RegisterDaemonResponse {
    enum Result {
        ACCEPTED = 0;
        REJECTED = 1;
    }
    Result response = 1;
    string email = 2;
    string name = 3;
}

message CreateRequest {
    enum Type {
        SERVER = 0;
        CLIENT = 1;
        NOT_CONNECTED = 2;
    }
    string token = 1;
    string path = 2;
    Type type = 3;
    bool encrypted = 4;
    bool fixed = 5;
    string connect_address = 6;
    string connect_port = 7;
    string listen_address = 8;
    string listen_port = 9;
}

message CreateResponse {
    enum Result {
        ACCEPTED = 0;
        REJECTED = 1;
        INVALID_PATH = 10;
        PATH_EXISTS = 11;
    }
    Result response = 1;
    string server_token = 2;
    string client_token = 3;
    ConnectionsList updates = 4;
}

message DeleteRequest {
    string token = 1;
    string path = 2;
}

message DeleteResponse {
    enum Result {
        ACCEPTED = 0;
        REJECTED = 1;
        INVALID_PATH = 10;
        PATH_NOT_FOUND = 11;
    }
    Result response = 1;
}

message ImportRequest {
    string token = 1;
}

message ImportResponse {
    enum Result {
        ACCEPTED = 0;
        REJECTED = 1;
    }
    Result response = 1;
    ConnectionsList updates = 2;
}

message AttachRequest {
    string token = 1;
    string path = 2;
    string address_override = 3;
    string port_override = 4;
}

message AttachResponse {
    enum Result {
        ACCEPTED = 0;
        REJECTED = 1;
        INVALID_PATH = 10;
        PATH_NOT_FOUND = 11;
        ALREADY_ATTACHED = 20;
    }
    Result response = 1;
    ConnectionsList updates = 2;
}

message DetachRequest {
    string path = 1;
}

message DetachResponse {
    enum Result {
        ACCEPTED = 0;
        REJECTED = 1;
        INVALID_PATH = 10;
        PATH_NOT_FOUND = 11;
        NOT_ATTACHED = 20;
    }
    Result response = 1;
}

message TreeRequest {
    string daemon_name = 1;
    string path = 2;
}

message Tree {
    enum Type {
        SERVER = 0;
        CLIENT = 1;
        NOT_CONNECTED = 2;
    }
    repeated Tree tree = 1;
    bool connection = 2;
    Type type = 3;
    string name = 4;
    string path = 5;
    uint32 servers_number = 6;
    string connect_address = 7;
    string connect_port = 8;
    uint32 clients_number = 9;
    string listen_address = 10;
    string listen_port = 11;
    bool encrypted = 12;
    bool fixed = 13;
}

message TreeResponse {
    enum Result {
        ACCEPTED = 0;
        REJECTED = 1;
        INVALID_PATH = 10;
        PATH_NOT_FOUND = 11;
    }
    Result response = 1;
    Tree tree = 2;
}

message ConnectionsListRequest {
}

message ConnectionsListResponse {
    enum Result {
        ACCEPTED = 0;
        REJECTED = 1;
    }
    Result response = 1;
    ConnectionsList list = 2;
}

message InternalAddress {
    string family = 1;
    string address = 2;
    string port = 3;
}

message Status {
    string connection_name = 1;
    uint32 connected = 2;
    bool active = 3;
    repeated InternalAddress internal_addresses = 4;
}

message ServerAvailable {
    string connection_name = 1;
    string daemon_name = 2;
    repeated InternalAddress internal_addresses = 3;
}

message LookupIdentityRequest {
    string identity = 1;
}

message LookupIdentityResponse {
    enum Result {
        FOUND = 0;
        NOT_FOUND = 1;
        REJECTED = 2;
    }
    Result response = 1;
    string name = 2;
    string key = 3;
}

message PunchRequest {
    string connection_name = 1;
}

message AddressRequest {
    string connection_name = 1;
    string request_id = 2;
}

message AddressResponse {
    string request_id = 1;
}

message PeerAvailable {
    string connection_name = 1;
    string external_address = 2;
    string external_port = 3;
}

message RedeemMasterRequest {
    string email = 1;
}

message RedeemMasterResponse {
    enum Result {
        ACCEPTED = 0;
        REJECTED = 1;
    }
    Result response = 1;
}

message RedeemDaemonRequest {
    string token = 1;
    string daemon_name = 2;
}

message RedeemDaemonResponse {
    enum Result {
        ACCEPTED = 0;
        REJECTED = 1;
    }
    Result response = 1;
    string token = 2;
}

message RedeemPathRequest {
    enum Type {
        SERVER = 0;
        CLIENT = 1;
    }
    string token = 1;
    string path = 2;
    Type type = 3;
}

message RedeemPathResponse {
    enum Result {
        ACCEPTED = 0;
        REJECTED = 1;
    }
    Result response = 1;
    string token = 2;
}

message ClientMessage {
    enum Type {
        ALIVE = 0;
        STATUS = 10;
        INIT_REQUEST = 20;
        CONFIRM_REQUEST = 21;
        CREATE_DAEMON_REQUEST = 30;
        REGISTER_DAEMON_REQUEST = 40;
        CREATE_REQUEST = 50;
        DELETE_REQUEST = 60;
        IMPORT_REQUEST = 70;
        ATTACH_REQUEST = 80;
        DETACH_REQUEST = 90;
        TREE_REQUEST = 100;
        CONNECTIONS_LIST_REQUEST = 110;
        LOOKUP_IDENTITY_REQUEST = 120;
        PUNCH_REQUEST = 130;
        ADDRESS_RESPONSE = 140;
        REDEEM_MASTER_REQUEST = 150;
        REDEEM_DAEMON_REQUEST = 151;
        REDEEM_PATH_REQUEST = 152;
    }
    Type type = 1;
    string message_id = 2;
    Status status = 3;
    InitRequest init_request = 100;
    ConfirmRequest confirm_request = 110;
    CreateDaemonRequest create_daemon_request = 200;
    RegisterDaemonRequest register_daemon_request = 300;
    CreateRequest create_request = 400;
    DeleteRequest delete_request = 500;
    ImportRequest import_request = 600;
    AttachRequest attach_request = 700;
    DetachRequest detach_request = 800;
    TreeRequest tree_request = 900;
    ConnectionsListRequest connections_list_request = 1000;
    LookupIdentityRequest lookup_identity_request = 1100;
    PunchRequest punch_request = 1200;
    AddressResponse address_response = 1300;
    RedeemMasterRequest redeem_master_request = 1400;
    RedeemDaemonRequest redeem_daemon_request = 1410;
    RedeemPathRequest redeem_path_request = 1420;
}

message ServerMessage {
    enum Type {
        ALIVE = 0;
        INIT_RESPONSE = 10;
        CONFIRM_RESPONSE = 11;
        CREATE_DAEMON_RESPONSE = 20;
        REGISTER_DAEMON_RESPONSE = 30;
        CREATE_RESPONSE = 40;
        DELETE_RESPONSE = 50;
        IMPORT_RESPONSE = 60;
        ATTACH_RESPONSE = 70;
        DETACH_RESPONSE = 80;
        TREE_RESPONSE = 90;
        CONNECTIONS_LIST_RESPONSE = 100;
        CONNECTIONS_LIST = 110;
        SERVER_AVAILABLE = 120;
        LOOKUP_IDENTITY_RESPONSE = 130;
        ADDRESS_REQUEST = 140;
        PEER_AVAILABLE = 150;
        REDEEM_MASTER_RESPONSE = 160;
        REDEEM_DAEMON_RESPONSE = 161;
        REDEEM_PATH_RESPONSE = 162;
    }
    Type type = 1;
    string message_id = 2;
    InitResponse init_response = 100;
    ConfirmResponse confirm_response = 110;
    CreateDaemonResponse create_daemon_response = 200;
    RegisterDaemonResponse register_daemon_response = 300;
    CreateResponse create_response = 400;
    DeleteResponse delete_response = 500;
    ImportResponse import_response = 600;
    AttachResponse attach_response = 700;
    DetachResponse detach_response = 800;
    TreeResponse tree_response = 900;
    ConnectionsListResponse connections_list_response = 1000;
    ConnectionsList connections_list = 1100;
    ServerAvailable server_available = 1200;
    LookupIdentityResponse lookupIdentityResponse = 1300;
    AddressRequest address_request = 1400;
    PeerAvailable peer_available = 1500;
    RedeemMasterResponse redeem_master_response = 1600;
    RedeemDaemonResponse redeem_daemon_response = 1610;
    RedeemPathResponse redeem_path_response = 1620;
}